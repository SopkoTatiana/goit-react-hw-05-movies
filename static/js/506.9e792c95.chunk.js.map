{"version":3,"file":"static/js/506.9e792c95.chunk.js","mappings":"+SACA,EAA2B,2BAA3B,EAAoE,8BAApE,EAA0G,wBAA1G,EAA6I,2BAA7I,EAAiL,yB,SCGlK,SAASA,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACzBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IACER,EAAW,8CACgCA,GACvCS,EAENC,IAAKT,EACLU,MAAM,QACNC,OAAO,WAET,iBAAKN,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,mBAA8BN,EAA9B,aAAwCC,EAAaW,MACnD,EACA,GAFF,QAIA,yBAAG,eAA4B,GAAfV,GAAmBW,QAAQ,GAAG,QAC9C,eAAIR,UAAWC,EAAf,SAA6B,cAC7B,uBAAIH,KACJ,eAAIE,UAAWC,EAAf,SAA6B,YAC7B,eAAID,UAAWC,EAAf,SACGF,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,0BAAcA,EAAK,MAAVD,EADC,WAOrB,CCpCD,I,EAAA,EAAiC,uCAAjC,EAAmF,iCAAnF,EAAgI,kC,SCG1HE,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mFAQD,SAASE,IACtB,OACE,iBAAKf,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA6B,4BAC7B,iBAAKD,UAAWC,EAAhB,WACE,SAACW,EAAD,CAAYI,GAAI,OAAhB,SAAwB,UACxB,SAACJ,EAAD,CAAYI,GAAI,UAAhB,SAA2B,gBAE7B,SAAC,KAAD,MAGL,C,eCfKC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,qOAcD,SAASM,IAAgB,IAAD,IACrC,GAA4BC,EAAAA,EAAAA,UAASC,EAAAA,EAAAA,SAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAO3B,EAAP,KAAc+B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAchD,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,CAAEC,OAAQ,UAAWV,QAAAA,IAC3BW,MAAK,SAAAC,GACJ,IAAoB,IAAhBA,EAAIC,QACN,MAAM,IAAIC,MAEZf,EAASa,GACTd,EAAUF,EAAAA,EAAAA,QACX,IACAmB,OAAM,SAAAC,GAAK,OAAIlB,EAAUF,EAAAA,EAAAA,MAAd,GACf,GAAE,CAACI,KAGF,gCACGH,IAAWD,EAAAA,EAAAA,UAAkB,uBAAG,eAChCC,IAAWD,EAAAA,EAAAA,QAAgB,SAAC,KAAD,CAAUL,GAAG,cACxCM,IAAWD,EAAAA,EAAAA,UACV,iCACE,SAACJ,EAAD,CAAYD,GAAIa,EAASa,QAAzB,SAAkC,UAClC,SAAClD,EAAD,CAAUC,MAAOA,KACjB,SAACsB,EAAD,SAKT,C,sDCtDM,IAAMM,EAAS,CACpBsB,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q","sources":["webpack://goit-react-hw-05-movies/./src/components/MainInfo/MainInfo.module.css?6ab9","components/MainInfo/MainInfo.jsx","webpack://goit-react-hw-05-movies/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails.jsx","services/pageStatus.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainInfo\":\"MainInfo_mainInfo__hHMqq\",\"information\":\"MainInfo_information__1Soh0\",\"title\":\"MainInfo_title__8OkPD\",\"subtitle\":\"MainInfo_subtitle__TDX0o\",\"genres\":\"MainInfo_genres__LoPNo\"};","import image from '../../img/icon-image-not-found.jpg';\nimport PropTypes from 'prop-types';\nimport css from './MainInfo.module.css';\n\nexport default function MainInfo({ movie }) {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <div className={css.mainInfo}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/original/${poster_path}`\n            : image\n        }\n        alt={title}\n        width=\"140px\"\n        height=\"200px\"\n      />\n      <div className={css.information}>\n        <h1 className={css.title}>{`${title} (${release_date.slice(\n          0,\n          4\n        )})`}</h1>\n        <p>User Score {(vote_average * 10).toFixed(2)}%</p>\n        <h2 className={css.subtitle}>Overview</h2>\n        <p>{overview}</p>\n        <h2 className={css.subtitle}>Genres</h2>\n        <ul className={css.genres}>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name} </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMainInfo.propTypes = {\n  movies: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"additionalInfo\":\"AdditionalInfo_additionalInfo__TeBHg\",\"subtitle\":\"AdditionalInfo_subtitle__-Pj9H\",\"container\":\"AdditionalInfo_container__Ol9jh\"};","import { NavLink, Outlet } from 'react-router-dom';\nimport css from './AdditionalInfo.module.css';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  font-size: 18px;\n\n  &.active {\n    color: pink;\n  }\n`;\n\nexport default function AdditionalInfo() {\n  return (\n    <div className={css.additionalInfo}>\n      <h2 className={css.subtitle}>Additional information</h2>\n      <div className={css.container}>\n        <StyledLink to={'cast'}>Cast</StyledLink>\n        <StyledLink to={'reviews'}>Reviews</StyledLink>\n      </div>\n      <Outlet />\n    </div>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Navigate, useLocation, useParams } from 'react-router-dom';\nimport filmsAPI from 'services/FilmsAPI';\nimport MainInfo from 'components/MainInfo/MainInfo';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport styled from 'styled-components';\nimport { Status } from '../services/pageStatus';\n\nconst BackButton = styled(Link)`\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  padding: 8px 16px;\n  background-color: #f1f1f1;\n  color: black;\n\n  &:hover {\n    background-color: #ddd;\n    color: black;\n  }\n`;\n\nexport default function MovieDetails() {\n  const [status, setStatus] = useState(Status.LOADING);\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    filmsAPI({ option: 'details', movieId })\n      .then(res => {\n        if (res.success === false) {\n          throw new Error();\n        }\n        setMovie(res);\n        setStatus(Status.SUCCESS);\n      })\n      .catch(error => setStatus(Status.ERROR));\n  }, [movieId]);\n\n  return (\n    <>\n      {status === Status.LOADING && <p>LOADING...</p>}\n      {status === Status.ERROR && <Navigate to=\"/NotFound\" />}\n      {status === Status.SUCCESS && (\n        <>\n          <BackButton to={backLink.current}>Back</BackButton>\n          <MainInfo movie={movie} />\n          <AdditionalInfo />\n        </>\n      )}\n    </>\n  );\n}\n","export const Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n"],"names":["MainInfo","movie","poster_path","title","release_date","vote_average","overview","genres","className","css","src","image","alt","width","height","slice","toFixed","map","id","name","StyledLink","styled","NavLink","AdditionalInfo","to","BackButton","Link","MovieDetails","useState","Status","status","setStatus","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","filmsAPI","option","then","res","success","Error","catch","error","current","IDLE","LOADING","SUCCESS","ERROR"],"sourceRoot":""}