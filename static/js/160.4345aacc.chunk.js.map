{"version":3,"file":"static/js/160.4345aacc.chunk.js","mappings":"mOACA,EAA6B,2BAA7B,EAAyE,+BAAzE,EAA6H,mC,kBCK9G,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASG,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC1BD,IAILT,EAAU,YACVW,EAAAA,EAAAA,GAAS,CAAEC,OAAQ,SAAUH,MAAAA,IAC1BI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACP,GAAuB,IAAnBA,EAAQC,OACV,MAAM,IAAIC,MAAM,oBAGlBhB,EAAUF,EAAAA,EAAAA,SACVD,EAASiB,EACV,IACAG,OAAM,SAAAhB,GACLD,EAAUF,EAAAA,EAAAA,OACVI,EAASD,EAAMiB,QAChB,IACJ,GAAE,CAACd,IAWJ,OACE,iCACE,kBAAMe,SAXW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMZ,EAAQW,EAAEE,OAAOC,SAASd,MAAMe,MAGtCnB,EAF4B,KAAVI,EAAe,CAAC,EAAI,CAAEA,MAAAA,GAGzC,EAIG,WACE,kBAAOgB,KAAK,WACZ,mBAAQC,KAAK,SAAb,SAAsB,cAEvB3B,IAAWD,EAAAA,EAAAA,UAAkB,yBAAK,YAClCC,IAAWD,EAAAA,EAAAA,UACV,eAAI6B,UAAWC,EAAf,SACGhC,EAAMiC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEI,GAAE,UAAKD,GACPE,MAAO,CAAEC,KAAM5B,GACfqB,UAAWC,EAHb,SAKGE,KANIC,EADA,MAadhC,IAAWD,EAAAA,EAAAA,QAAgB,uBAAIG,MAGrC,CCnEc,SAASkC,IACtB,OACE,+BACE,SAACzC,EAAD,KAGL,C,sDCRM,IAAMI,EAAS,CACpBsC,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q","sources":["webpack://goit-react-hw-05-movies/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","pages/Movies.jsx","services/pageStatus.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchList\":\"Search_searchList__FX3V6\",\"searchListItem\":\"Search_searchListItem__gT1o+\",\"searchListItemLink\":\"Search_searchListItemLink__oCEWn\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport filmsAPI from 'services/FilmsAPI';\nimport css from './Search.module.css';\nimport { Status } from 'services/pageStatus';\n\nexport default function Search() {\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n\n    setStatus('loading');\n    filmsAPI({ option: 'search', query })\n      .then(({ results }) => {\n        if (results.length === 0) {\n          throw new Error('No matches found');\n        }\n\n        setStatus(Status.SUCCESS);\n        setFilms(results);\n      })\n      .catch(error => {\n        setStatus(Status.ERROR);\n        setError(error.message);\n      });\n  }, [searchParams]);\n\n  const submitHandle = e => {\n    e.preventDefault();\n\n    const query = e.target.elements.query.value;\n    const newParams = query === '' ? {} : { query };\n\n    setSearchParams(newParams);\n  };\n\n  return (\n    <>\n      <form onSubmit={submitHandle}>\n        <input name=\"query\"></input>\n        <button type=\"submit\">Sumbit</button>\n      </form>\n      {status === Status.LOADING && <div>LOADING</div>}\n      {status === Status.SUCCESS && (\n        <ul className={css.searchList}>\n          {films.map(({ title, id }) => (\n            <li key={id} className={css.searchListItem}>\n              <Link\n                to={`${id}`}\n                state={{ from: location }}\n                className={css.searchListItemLink}\n              >\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === Status.ERROR && <p>{error}</p>}\n    </>\n  );\n}\n","import Search from 'components/Search/Search';\n\nexport default function Movies() {\n  return (\n    <>\n      <Search />\n    </>\n  );\n}\n","export const Status = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n"],"names":["Search","useState","films","setFilms","Status","status","setStatus","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","query","get","filmsAPI","option","then","results","length","Error","catch","message","onSubmit","e","preventDefault","target","elements","value","name","type","className","css","map","title","id","to","state","from","Movies","IDLE","LOADING","SUCCESS","ERROR"],"sourceRoot":""}